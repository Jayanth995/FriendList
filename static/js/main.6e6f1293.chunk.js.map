{"version":3,"sources":["components/TopBar.js","redux/actionTypes.js","components/AddFriend.js","redux/actions.js","components/FriendsList.js","components/Content.js","App.js","redux/reducers.js","redux/store.js","reportWebVitals.js","index.js"],"names":["TopBar","styles","style","display","alignItems","height","backgroundColor","fontWeight","padding","boxSizing","ADD_FRIEND","ADD_FAVOURITE","DELETE_FRIEND","AddFriend","useState","name","setName","dispatch","useDispatch","handleSubmit","e","pre","payloadObj","id","Date","getTime","fav","type","payload","addFriend","onSubmit","preventDefault","width","border","borderRadius","value","placeholder","onChange","target","handleChange","FriendsList","liStyle","borderBottom","textAlign","iconStyle","color","margin","cursor","pageNumberStyle","float","fontSize","searchTerm","setSearchTerm","currentPage","setCurrentPage","friendsPerPage","upperPageBound","setUpperPageBound","lowerPageBound","setLowerPageBound","isPrevBtnActive","setIsPrevBtnActive","isNextBtnActive","setIsNextBtnActive","pageBound","sortFlag","setSortFlag","friendsListArr","useSelector","state","friendsList","sortedFriends","reduce","acc","element","filteredFriends","filter","item","indexOf","useEffect","setPrevAndNextBtnClass","indexOfLastFriend","indexOfFirstFriend","currentFriends","slice","handlePageNumberClick","event","listid","Number","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","map","number","onClick","totalPage","btnIncrementClick","btnDecrementClick","btnPrevClick","btnNextClick","handleFavourite","addFavourite","handleDelete","deleteFriend","renderFriends","friend","index","justifyContent","marginTop","icon","faStar","faRegStar","faTrashAlt","handleSearchTerm","faSortAmountUp","previousFlag","title","className","listStyleType","pageDecrementBtn","pageIncrementBtn","Content","App","initialState","rootReducer","action","newArray","find","elem","splice","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e6f1293.chunk.js","sourcesContent":["\nconst TopBar = ({ styles }) => {\n  const topBarStyle = {    \n    display: \"flex\",    \n    alignItems: \"center\",\n    height: 40,\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n    fontWeight: \"bold\",\n    padding: \"0px 20px\",\n    boxSizing: \"border-box\"\n  };\n\n  return (\n    <div style={topBarStyle}>      \n      Friends List      \n    </div>\n  );\n};\n\nexport default TopBar;","export const ADD_FRIEND = 'ADD_FRIEND';\nexport const GET_FRIENDS = 'GET_FRIENDS';\nexport const ADD_FAVOURITE = 'ADD_FAVOURITE';\nexport const DELETE_FRIEND = 'DELETE_FRIEND';","import {useState} from 'react'; \nimport { useDispatch } from 'react-redux';\nimport { addFriend } from '../redux/actions';\n\nconst AddFriend = () => {\n    const [name,setName] = useState(\"\");\n    const dispatch = useDispatch();\n    const inputStyle = {\n        width: \"100%\",\n        padding: \"12px 20px\",        \n        display: \"inline-block\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"4px\",\n        boxSizing: \"border-box\"\n        \n    }\n    const generateKey = (pre) => {\n        return `${ pre }_${ new Date().getTime() }`;\n    }\n\n    const handleSubmit = (e) => {\n        let payloadObj = {id:generateKey(name),name: name, fav: false}\n        dispatch(addFriend(payloadObj)); \n        setName(\"\");\n    }\n\n    const handleChange = (e) => {\n        setName(e.target.value);\n    }\n    return (\n        <form onSubmit={e => {e.preventDefault(); handleSubmit(e);}}>\n            <input style={inputStyle} type=\"text\" value={name} placeholder=\"Enter your friend's name...\" onChange={(e) => handleChange(e)}/>\n        </form>\n    )\n}\n\nexport default AddFriend;","import {ADD_FRIEND, GET_FRIENDS, ADD_FAVOURITE, DELETE_FRIEND} from './actionTypes';\n\nexport const addFriend = (name) => {\n    return {\n        type: ADD_FRIEND,\n        payload:name\n    }\n}\n\nexport const addFavourite = (id) => {\n    return {\n        type: ADD_FAVOURITE,\n        payload:id\n    }\n}\n\nexport const deleteFriend = (id) => {\n    return {\n        type: DELETE_FRIEND,\n        payload:id\n    }\n}\n\nexport const getFriends = () => {\n    return {\n        type: GET_FRIENDS\n    }\n}","import { useDispatch, useSelector } from \"react-redux\"\nimport {  useEffect, useState } from \"react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar, faSortAmountUp } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt, faStar as faRegStar } from '@fortawesome/free-regular-svg-icons'\nimport { addFavourite, deleteFriend } from \"../redux/actions\"\n\nconst FriendsList = () => {\n\n    // CSS\n    const ulStyle = {\n        padding: \"0\",\n        border: \"1px solid #ddd\"\n    }\n    const liStyle = {\n        padding: \"8px 16px\",\n        borderBottom: \"1px solid #ddd\",\n        textAlign: \"left\"\n    }\n    const iconStyle= {\n        color: \"grey\",\n        border: \"1px solid grey\",\n        padding: \"5px\",\n        margin: \"0px 5px\",\n        cursor: \"pointer\"\n    }\n    const sortIconStyle = {\n        color: \"grey\",\n        border: \"1px solid grey\",\n        padding: \"5px 8px\",\n        margin: \"0px 10px\",\n        cursor: \"pointer\",\n        fontSize: \"1.5em\",\n        marginTop: \"8px\"\n    }\n    const pageNumberStyle = {\n            float: \"left\",\n            padding: \"8px 16px\",\n            fontWeight: \"bold\",\n            fontSize: \"20px\",\n            color: \"black\"\n    }\n    const inputStyle = {\n        width: \"90%\",\n        padding: \"12px 20px\",        \n        display: \"inline-block\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"4px\",\n        boxSizing: \"border-box\",\n        marginTop: \"5px\"\n    }\n    \n    // state declarations\n    const [searchTerm, setSearchTerm] = useState('');\n    const [currentPage,setCurrentPage] = useState(1);\n    const [friendsPerPage,setFriendsPerPage] = useState(4);\n    const [upperPageBound, setUpperPageBound] = useState(4);\n    const [lowerPageBound, setLowerPageBound] = useState(0);\n    const [isPrevBtnActive, setIsPrevBtnActive] = useState('disabled');\n    const [isNextBtnActive, setIsNextBtnActive] = useState('');\n    const [pageBound, setPageBound] = useState(4);\n    const [sortFlag, setSortFlag] = useState(false);\n\n    // fetch friend list from redux store\n    const friendsListArr = useSelector(state => state.friendsList);\n\n    // sorting the fav at top\n    const sortedFriends = friendsListArr.reduce((acc, element) => {\n                            if (element.fav) {\n                                return [element, ...acc];\n                            }\n                            return [...acc, element];\n                        }, []);\n    \n    // search filter\n    const filteredFriends = sortFlag ? sortedFriends.filter(item => item.name.indexOf(searchTerm) > -1) :  friendsListArr.filter(item => item.name.indexOf(searchTerm) > -1);\n    \n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        setPrevAndNextBtnClass(currentPage);\n    },[filteredFriends])\n\n    // pagination logic\n    const indexOfLastFriend = currentPage * friendsPerPage;\n    const indexOfFirstFriend = indexOfLastFriend - friendsPerPage;\n    const currentFriends = filteredFriends.slice(indexOfFirstFriend, indexOfLastFriend);\n\n    const handlePageNumberClick = (event) => {\n        let listid = Number(event.target.id);\n        setCurrentPage(listid);        \n        setPrevAndNextBtnClass(listid);\n    }\n\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(filteredFriends.length / friendsPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n        \n        if(number === 1 && currentPage === 1){\n            return(\n                <li key={number} style={pageNumberStyle} id={number} onClick={(e) => handlePageNumberClick(e)}>{number}</li>\n            )\n        }\n        else if((number < upperPageBound + 1) && number > lowerPageBound){\n            return(\n                <li key={number} style={pageNumberStyle} id={number} onClick={(e) => handlePageNumberClick(e)}>{number}</li>\n            )\n        }        \n    });\n    \n    const pageIncrementBtn = () => {\n        if(pageNumbers.length > upperPageBound){\n            return <li style={pageNumberStyle} className='' onClick={() => btnIncrementClick()}> &hellip; </li>\n        }\n    }\n\n    const pageDecrementBtn = () => { \n        if(lowerPageBound >= 1){\n            return <li style={pageNumberStyle} className='' onClick={() => btnDecrementClick()}> &hellip; </li>\n        }\n    }\n\n    const renderPrevBtn = () => {\n        if(isPrevBtnActive === 'disabled'){\n            return <li style={pageNumberStyle} className={isPrevBtnActive} > Prev </li>\n        } else {\n            return <li style={pageNumberStyle} className={isPrevBtnActive} onClick={() => btnPrevClick()}>Prev </li>\n        }\n    }\n\n    const renderNextBtn = () => {\n        if(isNextBtnActive === 'disabled'){\n            return <li style={pageNumberStyle} className={isNextBtnActive}> Next </li>\n        } else {\n           return <li style={pageNumberStyle} className={isNextBtnActive} onClick={() => btnNextClick()}> Next </li>\n        }\n    }\n\n    const setPrevAndNextBtnClass = (listid) => {\n        let totalPage = Math.ceil(filteredFriends.length / friendsPerPage);\n        setIsNextBtnActive('disabled');\n        setIsPrevBtnActive('disabled');        \n        if(totalPage === listid && totalPage > 1){\n            setIsPrevBtnActive('');            \n        }\n        else if(listid === 1 && totalPage > 1){\n            setIsNextBtnActive('')            \n        }\n        else if(totalPage > 1){\n            setIsNextBtnActive('')   \n            setIsPrevBtnActive('');                 \n        }\n    }\n    \n    const btnIncrementClick = () => {\n        setUpperPageBound(upperPageBound + pageBound);\n        setLowerPageBound(lowerPageBound + pageBound);                \n        let listid = upperPageBound + 1;\n        setCurrentPage(listid);        \n        setPrevAndNextBtnClass(listid);\n    }\n\n    const btnDecrementClick = () => {\n        setUpperPageBound(upperPageBound - pageBound);\n        setLowerPageBound(lowerPageBound - pageBound);          \n        let listid = upperPageBound - pageBound;\n        setCurrentPage(listid);     \n        setPrevAndNextBtnClass(listid);\n    }\n\n    const btnPrevClick = () => { \n        if((currentPage - 1) % pageBound === 0 ){\n            setUpperPageBound(upperPageBound - pageBound);\n            setLowerPageBound(lowerPageBound - pageBound);            \n        }\n        let listid = currentPage - 1;\n        setCurrentPage(listid); \n        setPrevAndNextBtnClass(listid);\n    }\n    const btnNextClick = () => {\n        if((currentPage +1) > upperPageBound ){\n            setUpperPageBound(upperPageBound + pageBound);\n            setLowerPageBound(lowerPageBound + pageBound);   \n        }\n        let listid = currentPage + 1;\n        setCurrentPage(listid); \n        setPrevAndNextBtnClass(listid);\n    }\n\n    const handleSearchTerm = (e) => {\n        setSearchTerm(e.target.value);\n    }\n\n    const handleFavourite = (id) => {       \n        dispatch(addFavourite(id));\n    }\n\n    const handleDelete = (id) => {\n        dispatch(deleteFriend(id));\n    }\n    \n    const handleSort = () => {\n        setSortFlag(previousFlag => !previousFlag);\n    }\n\n    const renderFriends = currentFriends.map((friend, index) => {\n        return (\n            <li key={friend.id} style ={liStyle}>\n                <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\n                    <div style={{display:\"grid\"}}>\n                        <span style={{fontWeight:\"bold\"}}>{friend.name}</span>\n                        <span style={{fontSize:\"small\", marginTop:\"10px\"}}>is your friend</span>\n                    </div>\n                    <div>\n                        <FontAwesomeIcon onClick={() => handleFavourite(friend.id)} style={iconStyle} icon={friend.fav ? faStar : faRegStar}  />\n                        <FontAwesomeIcon onClick={() => handleDelete(friend.id)} style={iconStyle} icon={faTrashAlt}  />                                                                      \n                    </div>\n                </div>\n            </li>\n        );\n      });\n\n    return (\n        <div>\n            {friendsListArr.length > 0 && <div style={{display:'flex',justifyContent:\"center\"}}>\n                <input style={inputStyle} type=\"text\" onChange={(e) => handleSearchTerm(e)} placeholder=\"Search...\" />\n                <FontAwesomeIcon  style={sortIconStyle} icon={faSortAmountUp} onClick={() => handleSort()} title=\"Sort by Favourite\" /> \n            </div>}\n            <ul style ={ulStyle} className=\"ulStyle\">\n                {renderFriends}\n            </ul>\n            <ul style={{display: \"inline-block\", listStyleType:\"none\", justifyContent:\"center\"}}>\n              {filteredFriends.length > 0 && renderPrevBtn()}\n              {pageDecrementBtn()}\n              {renderPageNumbers}\n              {pageIncrementBtn()}\n              {filteredFriends.length > 0 && renderNextBtn()}\n            </ul>\n        </div>\n    );\n}\n\nexport default FriendsList;","import AddFriend from \"./AddFriend\";\nimport FriendsList from \"./FriendsList\";\n\nconst Content = () => {\n    return(\n        <div className=\"content\">\n            <AddFriend/>\n            <FriendsList/>\n        </div>\n    )\n}\n\nexport default Content;","import './App.css';\nimport TopBar from './components/TopBar'\nimport Content from './components/Content'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopBar/>\n      <Content/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ADD_FAVOURITE, ADD_FRIEND, DELETE_FRIEND } from './actionTypes';\n\nconst initialState = {\n    friendsList: []\n}\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_FRIEND: return {\n            ...state,\n            friendsList: [...state.friendsList,action.payload]\n        }\n\n        case ADD_FAVOURITE: {\n            let newArray = [...state.friendsList];\n            newArray.find(elem => elem.id == action.payload).fav = !newArray.find(elem => elem.id == action.payload).fav;\n            return {\n                ...state,\n                friendsList: newArray\n            }\n        }\n\n        case DELETE_FRIEND: {\n            let newArray = [...state.friendsList];\n            let index = newArray.indexOf(newArray.find(elem => elem.id == action.payload));\n            newArray.splice(index,1); \n            return {\n                ...state,   \n                friendsList: newArray\n            }\n        }\n\n        default: return state\n    }\n}\n\nexport default rootReducer;","import { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport store from './redux/store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}